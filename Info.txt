27 de Febrero de 2017
*********************

Tipos de Array:
-Longitud fija:		NSArray
-Longitud dinamica:	NSMutableArray


Ejemplo Array de longitud dinamica

NSMutableArray *listaNombres;
listaNombres = [[NSMutableArray alloc]init];
[listaNombres addObject: @‚Äúvalor‚Äù];

Recorrer un Array

int indice = 0;
while (indice < [listaNombres count])
	NSLog (@‚Äú%@‚Äù, [listaNombres objectAtIndex:indice]);
	indice ++;
}


Ejercicio Calculadora

Fase 1
	op1 operacion Op2 = resultado

Fase 2
	operaciones anidadas (3 + 7 * 9)

Fase 3
	Mas de un digito

Fase 4
	Prioridad operaciones


* Convertir a String

[NSString stringWithFormat: @‚Äú%d‚Äù, entero];
[NSString stringWithFormat: @‚Äú%lf‚Äù, decimal];

* Convertir de String a Entero

int op1 = [obtenido stringValue];


* Crear funciones


declarar metodo:
- (void) mostrarResultado {
...
}

Llamar al metodo:
[self mostrarResultado];

https://developer.apple.com/reference/foundation/nsmutablearray?language=objc

28 de Febrero de 2017
*********************

Variables globales

AppDelegate.h 

 A√±adir:
 @property (nonatomic, retain) NSMutableArray *listaCiudades;


AppDelegate.m

En esta funci√≥n habra que inicializar el Array y a√±adir sus valores

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
    // Override point for customization after application launch.
    
    self.listaCiudades = [[NSMutableArray alloc] init];
    [self.listaCiudades addObject:@"Madrid"];
    [self.listaCiudades addObject:@"Barcelona"];
    [self.listaCiudades addObject:@"Valencia"];
    [self.listaCiudades addObject:@"Cadiz"];
    
    return YES;
}

TablasTableViewController.m (La hemos creado)

-Importar la clase
#import "AppDelegate.h"

En la funcion, inicializamos la variable global


AppDelegate *appDelegate;

- (void)viewDidLoad {
appDelegate= ((AppDelegate *) [[UIApplication sharedApplication]delegate]);
...


//El tama√±o de nuestra lista
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    //appDelegate= ((AppDelegate *) [[UIApplication sharedApplication]delegate]);

    return [appDelegate.listaCiudades count];
}


//Recorremos cada lista de la tabla, para introducirle los valores deseados a los label de cada lista
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"idCelda" forIndexPath:indexPath];
    
    // Configure the cell...
    UILabel *nombre = (UILabel *)[cell viewWithTag:1001];
    UILabel *pais = (UILabel *)[cell viewWithTag:1002];

    
    nombre.text = [appDelegate.listaCiudades objectAtIndex:indexPath.row ];
    
    pais.text = @"Espa√±a";
    
    NSLog(@"TablasTableViewController..." );
    
    //indexPath.row
    
    return cell;
}


Edit >> Embed In >> Navegation Controller




1 de Marzo de 2017
******************


-Acceder a otra Ventana desde c√≥digo

Importar la otra el .h de la ViewController generada
#import "AccedoViewController.h"

En el button 

- (IBAction)buttonAcceder:(id)sender {
    AccedoViewController *vistaVC = [self.storyboard instantiateViewControllerWithIdentifier: @"idAccedoViewController"];
    [self showViewController:vistaVC sender: nil ];
    
    
}
@end



- Crear alerta


UIAlertController *alert;
UIAlertAction *yesButton, *noButton;



alert = [UIAlertController alertControllerWithTitle: @"Autenticaci√≥n" message: @"autenticandose..." preferredStyle: UIAlertControllerStyleAlert ];
    
    yesButton = [UIAlertAction actionWithTitle:@"Yes, please" style:UIAlertActionStyleDefault handler:^(UIAlertAction * action) {
        NSLog(@"YES...");
    }];
    
    noButton = [UIAlertAction actionWithTitle:@"No, thanks. Usuario o Contrase√±a incorrecta" style:UIAlertActionStyleDefault handler:^(UIAlertAction * action) {
        NSLog(@"NO...");
    }];



En la accion del button ponemos:

    if (!autenticacion){
        [alert addAction:noButton];
        [self presentViewController:alert animated:YES completion:nil];
     }


2 de Marzo de 2017
******************

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"idListaImagenes" forIndexPath:indexPath];
    
    
    UIImageView *imagen = (UIImageView *) [cell viewWithTag:1001];
    UILabel *titulo = (UILabel *) [cell viewWithTag:1002];
    
    NSString *nombreImagen = [appDelegate.listaImagenes objectAtIndex: indexPath.row];
    NSString *tituloImagen = [appDelegate.listaTitulosImagenes objectAtIndex: indexPath.row];
    
    imagen.image = [UIImage imageNamed: nombreImagen];
    titulo.text = tituloImagen;
    
    return cell;
}


//Este no lo genera habr√° que crearlo, se utilizar para seleccionar un 
//item de la lista

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    NSLog(@"Ha seleccionado la fila: %ld", (long)indexPath.row);
    
    
}


-Pasar informaci√≥n de una ventana a otra

En la ventana1.m ir al metodo prepareForSegue


- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
    
    if ([segue.identifier isEqualToString:@"segueCategoriaAProductos"]) {
	//Pasarle el numero de item que se a pulsado
        NSIndexPath *indexPath = [self.tableView indexPathForSelectedRow];
        ProductosTableViewController *vistaProductosTVC = segue.destinationViewController;
        vistaProductosTVC.productos = [NSString stringWithFormat:@"Fila %ld", (long)indexPath.row];
    }
}


En la ventana2.h a√±adir lo siguiente:


//Para tipos primitivos utilizar no utilizar (nonatomic, retain); int, Integer, double, etc

@property (nonatomic, retain) NSString *productos;

En la ventana2.m le tenemos que llamar de la siguiente manera
self.productos;

3 de Marzo de 2017
******************

- Cerrar la ventana desde el buton de su ventana

- (IBAction)buttonCambiarVentana3VC:(id)sender {
    
    [self.presentingViewController dismissViewControllerAnimated:YES completion:nil];
}

-Ir al principio de la ventana
[self.navigationController popToRootViewControllerAnimated:YES]

-Ir a la ventana anterior
[self.navigationController popViewControllerAnimated:YES]

-Mostrar una barra en el titulo
self.navigationItem.title = @‚ÄúVentana 1‚Äù;


6 de Marzo de 2017
******************

- Tratando con ficheros

@implementation GenerarFicheroViewController
NSMutableArray *yourArray;
NSString *youArrayFileName;

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [paths objectAtIndex:0];
    
    //Se seleciona la ruta exacta
    youArrayFileName = [documentsDirectory stringByAppendingPathComponent:@"example.dat"];
    
    //Ver la ubicacion del archivo
    NSLog(@"ubicacion %@", youArrayFileName);
    
    //Inicializo el Array
     yourArray = [[NSMutableArray alloc] initWithContentsOfFile:youArrayFileName];
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


- (IBAction)buttonCreate:(id)sender {
    //Si es la primera vez que accedo a mi aplicacion, debo crear el Array
    if (yourArray == nil) {
        //el Array no existe, con lo que se crear uno nuevo
        yourArray = [[NSMutableArray alloc] init];
        
        NSLog(@"El fichero NO  existe. Se ha creado");
    } else {
        NSLog(@"El fichero SI existe");
    }
    
    //Asigno el Array (nuevo o con los datos locales) el Array que voy a utilizar en la aplicacion.
    NSMutableArray *listaArray = yourArray;
    
    [listaArray writeToFile:youArrayFileName atomically:YES];
    
}
- (IBAction)buttonDelete:(id)sender {
    
    NSError *error;
    //Existe el archivo
    if ([[NSFileManager defaultManager] fileExistsAtPath: youArrayFileName]) {
        if (![[NSFileManager defaultManager] removeItemAtPath:youArrayFileName error:&error]) {
            NSLog(@"Delete file error: %@", error);
        } else {
            NSLog(@"Se ha eliminado.");
        }
    }
    
    
}

- Actualizar la tabla al volver a ella

De la vista dise√±o hay que arrastrar ‚ÄúTable View‚Äù al siguiente archivo
//ListaAnimalesTableViewController.h
Creara algo como esto:
@property (strong, nonatomic) IBOutlet UITableView *tabla;



//ListaAnimalesTableViewController.m

-(void) viewWillAppear:(BOOL)animated{
    
    [self.tabla reloadData];
    
}




Diccionario, ideal para almacenar objetos

NSMutableArray *lista = [[NSMutableArray alloc]init];

NSMutableDictionary *dict = [[NSMutableDictionary alloc]init];
[dict setValue:@‚ÄúJesus‚Äù forKey:@‚Äúnombre‚Äù]
[dict setValue:@‚Äú123456789‚Äù forKey:@‚Äútelefono‚Äù]

[lista addObject:dict];


- Para tratar de manera mas c√≥moda los atributos de AppDelegate, tienen que ser del mismo tipo

AppDelegate *appDelegateEditarNombreAnimalesVC;

NSString *nombreArchivoEditarNombreAnimalesVC;
NSMutableArray *listaAnimalesEditarNombreAnimalesVC;

appDelegateEditarNombreAnimalesVC = (AppDelegate *) [[UIApplication sharedApplication]delegate];
    
listaAnimalesEditarNombreAnimalesVC = appDelegateEditarNombreAnimalesVC.listaAnimales;
nombreArchivoEditarNombreAnimalesVC = appDelegateEditarNombreAnimalesVC.youArrayFileName;



07 de Marzo de 2017
*******************

- Maps en iOS
Importar el Framework Map Kit View. Agregamos MapKit.framework

A nuestro View Controller a√±adimos el objeto ‚ÄúMap Kit View‚Äù

‚ÄúmapaViewController.h‚Äù

importamos: #import <MapKit/MapKit.h>

Debe ser un IBOutlet pero weak (no strong). Le ponemos el nombre que queramos, en mi caso ‚Äúmapa‚Äù. Con ese nombre el con el que debemos llamar ahora a nuestro Map Kit View.

@property (weak, nonatomic) IBOutlet MKMapView *mapa;


‚ÄúmapaViewController.h‚Äù

debajo de @implementation ponemos:
@synthesize mapa;


-Centramos el mapa y lo mostramos.// anÃÉadimos las coordenadas del punto doÃÅnde queremos centrar el mapa CLLocationCoordinate2D zoomLocation;zoomLocation.latitude = 38.915359;zoomLocation.longitude= -6.3409557;// anÃÉadimos zoom y valores de distancia. 
MKCoordinateRegion viewRegion =MKCoordinateRegionMakeWithDistance(zoomLocation, 1000, 1000);// mostramos el mapa[mapa setRegion:viewRegion animated:YES];



-¬øSi queremos anÃÉadir un punto con informacioÃÅn? // anÃÉadimos una anotacioÃÅnCLLocationCoordinate2D pointLocation; 
pointLocation.latitude = 38.915636; 
pointLocation.longitude = -6.338563;MKPointAnnotation *point = [[MKPointAnnotation alloc] init]; 
point.coordinate = pointLocation;point.title = @"Anfiteatro Romano";point.subtitle = @"MeÃÅrida";[mapa addAnnotation:point];



09 de Marzo de 2017
*******************

Consultar que se habilite el permiso

- Obtener nuestra localizaci√≥n

Importar los siguientes framework

 *CoreLocation.framework
 *MapKit.framework

Info.plis, a√±adir los siguiente permisos

 * Privacy - Location When In Use Usage Description, hay que poner un ‚Äúvalue‚Äù, Por Ej. ‚ÄúDebe tener la localizacion activada.‚Äù
 * Privacy - Location Always Usage Description, hay que poner un ‚Äúvalue‚Äù, Por Ej. ‚ÄúDebe tener la localizacion activada.‚Äù



en el MapaViewController.h importar lo siguiente: 
#import <MapKit/MapKit.h>
#import <CoreLocation/CoreLocation.h>

@interface MapaViewController : UIViewController <CLLocationManagerDelegate>
....

en el MapaViewController.m realizamos lo siguiente


@implementation MapaViewController

CLLocationManager *locationManager;

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    
    locationManager = [[CLLocationManager alloc]init];
    locationManager.delegate = self;
    locationManager.distanceFilter = kCLDistanceFilterNone;
    locationManager.desiredAccuracy = kCLLocationAccuracyBest;
    [locationManager requestWhenInUseAuthorization];
    
    [locationManager startUpdatingLocation];
    
    NSLog(@"Latitud %.8f \nLongitud %.8f",locationManager.location.coordinate.latitude,locationManager.location.coordinate.longitude);
    
}

-Otra manera de llamar a una propiedad

* miClase.m 
@property (weak, nonatomic) IBOutlet MKMapView *mapViewMapa;

* miClase.h

1.- Se le puede llamar de dos maneras
@synthesize mapViewMapa

y desde todo el codigo le llamamos como mapViewMapa

2.- Se le puede llamar desde todo el c√≥digo como

self.mapViewMapa



- Distancia entre dos puntos

CLLocationManager *location1 = [[CLLocationManager alloc]init];
CLLocationManager *location2 = [[CLLocationManager alloc]init];

CLLocationDistance distance = [location1.location distanceFromLocation: location2.location];

NSLog(@‚ÄúDistancia %f‚Äù, distance);


- Si no tiene los permisos de GeoLocalizacion, la aplicacion le da la opcion de habilitarlo

if ([CLLocationManager locationServicesEnabled]) {

	NSLog (‚ÄúLocation Services Enabled‚Äù);
	if([CLLocationManager authorizationStatus] == kCLAuthorizationStatusDenied){
		[[UIApplication sharedApplication]openURL:[NSURL URLWithString: UIApplicationOpenSettingsURLString]];
	}
}




16/1017

